name: harvester (test mode)

on:
  push:
    branches:
      - master
      - staging
  pull_request:
    branches:
      - master
      - staging
  workflow_dispatch:

env:
  PG_SERVER: localhost
  PG_PORT: "54322"
  PG_USER: postgres
  PG_PASS: postgres
  PG_DB: postgres
  SUPABASE_URL: http://localhost:54321
  SUPABASE_BUCKET_NAME: data_assets
  OUTPUT: "True"
  MAPBOXUSERNAME: "123"
  MAPBOXTOKEN: "456"
  MAPBOXTILESET: "xyz"
  MAPBOXLAYERNAME: "abc"
  LOGGING: INFO
  SKIP_MAPBOX: "True"
  # DATABASE_URL: postgresql://fangorn:ent@localhost:5432/trees?schema=public

jobs:
  test-harvest:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Get the source
        uses: actions/checkout@v3
      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v2
        with:
          node-version-file: ".nvmrc"
      - name: Get the source for the api staging
        uses: actions/checkout@v3
        if: github.event.pull_request.base.ref == 'staging' || github.ref == 'refs/heads/staging'
        with:
          repository: technologiestiftung/giessdenkiez-de-postgres-api
          path: api
          ref: staging
      - name: Get the source for the api master
        uses: actions/checkout@v3
        if: github.event.pull_request.base.ref == 'master' || github.ref == 'refs/heads/master'
        with:
          repository: technologiestiftung/giessdenkiez-de-postgres-api
          path: api
      - uses: supabase/setup-cli@v1
        with:
          version: 1.33.0
      - name: build the harvester
        run: cd harvester && docker build --tag technologiestiftung/giessdenkiez-de-dwd-harvester:test .
      - name: Start the api
        id: api-start
        run: cd api && supabase start | grep -w "service_role key" | cut -d ":" -f 2 | xargs |  tr -d '\n' | awk '{print "service_role_key="$1}' >> "$GITHUB_OUTPUT" && cd ..
      - name: run the harvester
        run: docker run --env PG_SERVER='0.0.0.0' --env SKIP_MAPBOX --env PG_DB --env PG_PORT --env PG_USER --env PG_PASS --env SUPABASE_URL --env SUPABASE_SERVICE_ROLE_KEY='${{ steps.api-start.outputs.service_role_key }}' --env SUPABASE_BUCKET_NAME --env MAPBOXTOKEN --env MAPBOXUSERNAME --env LOGGING --env OUTPUT --network host technologiestiftung/giessdenkiez-de-dwd-harvester:test
      - name: stop the api
        run: cd api && supabase stop && cd ..
  release:
    name: semantic-release
    needs: [test-harvest]
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 18
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
